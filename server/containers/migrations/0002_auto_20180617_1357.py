# Generated by Django 2.0.6 on 2018-06-17 13:57

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0040_page_draft_title'),
        ('wagtailimages', '0020_add-verbose-name'),
        ('containers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('icon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('teaser', models.TextField()),
                ('type', models.CharField(choices=[('Webinar', 'Webinar'), ('Kurs', 'Kurs'), ('Coaching', 'Coaching')], max_length=100)),
                ('count', models.CharField(help_text="e.g. '3 Veranstaltungen'", max_length=255)),
                ('duration', models.CharField(help_text="e.g. 'je 2 Tage'", max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.RemoveField(
            model_name='container',
            name='content',
        ),
        migrations.RemoveField(
            model_name='container',
            name='intro',
        ),
        migrations.AddField(
            model_name='container',
            name='description',
            field=wagtail.core.fields.RichTextField(default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='container',
            name='hero_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image'),
        ),
        migrations.AddField(
            model_name='container',
            name='resources',
            field=wagtail.core.fields.StreamField([('link', wagtail.core.blocks.StructBlock([('description', wagtail.core.blocks.CharBlock()), ('url', wagtail.core.blocks.URLBlock())])), ('document', wagtail.core.blocks.StructBlock([('description', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', wagtail.core.blocks.TextBlock(required=False))]))]))], default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='container',
            name='teaser',
            field=models.TextField(default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='container',
            name='tools',
            field=wagtail.core.fields.StreamField([('link', wagtail.core.blocks.StructBlock([('description', wagtail.core.blocks.CharBlock()), ('url', wagtail.core.blocks.URLBlock())])), ('document', wagtail.core.blocks.StructBlock([('description', wagtail.core.blocks.CharBlock()), ('file', wagtail.core.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock()), ('label', wagtail.core.blocks.TextBlock(required=False))]))]))], default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='container',
            name='video_description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='container',
            name='video_id',
            field=models.PositiveIntegerField(blank=True, help_text='Vimeo video id (https://vimeo.com/<this-id>)', null=True),
        ),
    ]
